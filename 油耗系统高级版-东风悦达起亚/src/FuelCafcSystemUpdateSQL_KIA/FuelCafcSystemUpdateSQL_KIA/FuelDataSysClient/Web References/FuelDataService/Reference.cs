//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace FuelDataSysClient.FuelDataService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FuelDataSysWebServiceSoap", Namespace="FuelDataSysWebService")]
    public partial class FuelDataSysWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryQymcOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryParamVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUploadTimeConstrainOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUploadDeadLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInsertFuelDataListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadOverTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyDelelteOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUploadedFuelDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUploadedFuelDataCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCustomFuelDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryVehicleInfoByVinOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryVehicleInfoByVinVidOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryApplyUpLoadOTOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryApplyDelInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryApplyUpdateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryHisFuelDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRllxParamDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryHolidayDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryVidByVinsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryNoticeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUploadedFuelData_NewOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FuelDataSysWebService() {
            this.Url = global::FuelDataSysClient.Properties.Settings.Default.FuelDataSysClient_FuelDataService_FuelDataSysWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event CheckUserCompletedEventHandler CheckUserCompleted;
        
        /// <remarks/>
        public event QueryQymcCompletedEventHandler QueryQymcCompleted;
        
        /// <remarks/>
        public event QueryParamVersionCompletedEventHandler QueryParamVersionCompleted;
        
        /// <remarks/>
        public event QueryUploadTimeConstrainCompletedEventHandler QueryUploadTimeConstrainCompleted;
        
        /// <remarks/>
        public event QueryUploadDeadLineCompletedEventHandler QueryUploadDeadLineCompleted;
        
        /// <remarks/>
        public event UploadInsertFuelDataListCompletedEventHandler UploadInsertFuelDataListCompleted;
        
        /// <remarks/>
        public event UploadOverTimeCompletedEventHandler UploadOverTimeCompleted;
        
        /// <remarks/>
        public event ApplyUpdateCompletedEventHandler ApplyUpdateCompleted;
        
        /// <remarks/>
        public event ApplyDelelteCompletedEventHandler ApplyDelelteCompleted;
        
        /// <remarks/>
        public event QueryUploadedFuelDataCompletedEventHandler QueryUploadedFuelDataCompleted;
        
        /// <remarks/>
        public event QueryUploadedFuelDataCountCompletedEventHandler QueryUploadedFuelDataCountCompleted;
        
        /// <remarks/>
        public event QueryCustomFuelDataCompletedEventHandler QueryCustomFuelDataCompleted;
        
        /// <remarks/>
        public event QueryVehicleInfoByVinCompletedEventHandler QueryVehicleInfoByVinCompleted;
        
        /// <remarks/>
        public event QueryVehicleInfoByVinVidCompletedEventHandler QueryVehicleInfoByVinVidCompleted;
        
        /// <remarks/>
        public event QueryApplyUpLoadOTCompletedEventHandler QueryApplyUpLoadOTCompleted;
        
        /// <remarks/>
        public event QueryApplyDelInfoCompletedEventHandler QueryApplyDelInfoCompleted;
        
        /// <remarks/>
        public event QueryApplyUpdateInfoCompletedEventHandler QueryApplyUpdateInfoCompleted;
        
        /// <remarks/>
        public event QueryHisFuelDataCompletedEventHandler QueryHisFuelDataCompleted;
        
        /// <remarks/>
        public event QueryRllxParamDataCompletedEventHandler QueryRllxParamDataCompleted;
        
        /// <remarks/>
        public event QueryHolidayDataCompletedEventHandler QueryHolidayDataCompleted;
        
        /// <remarks/>
        public event QueryVidByVinsCompletedEventHandler QueryVidByVinsCompleted;
        
        /// <remarks/>
        public event QueryNoticeCompletedEventHandler QueryNoticeCompleted;
        
        /// <remarks/>
        public event QueryUploadedFuelData_NewCompletedEventHandler QueryUploadedFuelData_NewCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/HelloWorld", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/CheckUser", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckUser(string userId, string password) {
            object[] results = this.Invoke("CheckUser", new object[] {
                        userId,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserAsync(string userId, string password) {
            this.CheckUserAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void CheckUserAsync(string userId, string password, object userState) {
            if ((this.CheckUserOperationCompleted == null)) {
                this.CheckUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserOperationCompleted);
            }
            this.InvokeAsync("CheckUser", new object[] {
                        userId,
                        password}, this.CheckUserOperationCompleted, userState);
        }
        
        private void OnCheckUserOperationCompleted(object arg) {
            if ((this.CheckUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserCompleted(this, new CheckUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryQymc", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryQymc(string userId, string password) {
            object[] results = this.Invoke("QueryQymc", new object[] {
                        userId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryQymcAsync(string userId, string password) {
            this.QueryQymcAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void QueryQymcAsync(string userId, string password, object userState) {
            if ((this.QueryQymcOperationCompleted == null)) {
                this.QueryQymcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryQymcOperationCompleted);
            }
            this.InvokeAsync("QueryQymc", new object[] {
                        userId,
                        password}, this.QueryQymcOperationCompleted, userState);
        }
        
        private void OnQueryQymcOperationCompleted(object arg) {
            if ((this.QueryQymcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryQymcCompleted(this, new QueryQymcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryParamVersion", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryParamVersion(string userId, string password) {
            object[] results = this.Invoke("QueryParamVersion", new object[] {
                        userId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryParamVersionAsync(string userId, string password) {
            this.QueryParamVersionAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void QueryParamVersionAsync(string userId, string password, object userState) {
            if ((this.QueryParamVersionOperationCompleted == null)) {
                this.QueryParamVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryParamVersionOperationCompleted);
            }
            this.InvokeAsync("QueryParamVersion", new object[] {
                        userId,
                        password}, this.QueryParamVersionOperationCompleted, userState);
        }
        
        private void OnQueryParamVersionOperationCompleted(object arg) {
            if ((this.QueryParamVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryParamVersionCompleted(this, new QueryParamVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryUploadTimeConstrain", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryUploadTimeConstrain(string userId, string password) {
            object[] results = this.Invoke("QueryUploadTimeConstrain", new object[] {
                        userId,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUploadTimeConstrainAsync(string userId, string password) {
            this.QueryUploadTimeConstrainAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void QueryUploadTimeConstrainAsync(string userId, string password, object userState) {
            if ((this.QueryUploadTimeConstrainOperationCompleted == null)) {
                this.QueryUploadTimeConstrainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUploadTimeConstrainOperationCompleted);
            }
            this.InvokeAsync("QueryUploadTimeConstrain", new object[] {
                        userId,
                        password}, this.QueryUploadTimeConstrainOperationCompleted, userState);
        }
        
        private void OnQueryUploadTimeConstrainOperationCompleted(object arg) {
            if ((this.QueryUploadTimeConstrainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUploadTimeConstrainCompleted(this, new QueryUploadTimeConstrainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryUploadDeadLine", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime QueryUploadDeadLine(System.DateTime manufactureDate) {
            object[] results = this.Invoke("QueryUploadDeadLine", new object[] {
                        manufactureDate});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUploadDeadLineAsync(System.DateTime manufactureDate) {
            this.QueryUploadDeadLineAsync(manufactureDate, null);
        }
        
        /// <remarks/>
        public void QueryUploadDeadLineAsync(System.DateTime manufactureDate, object userState) {
            if ((this.QueryUploadDeadLineOperationCompleted == null)) {
                this.QueryUploadDeadLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUploadDeadLineOperationCompleted);
            }
            this.InvokeAsync("QueryUploadDeadLine", new object[] {
                        manufactureDate}, this.QueryUploadDeadLineOperationCompleted, userState);
        }
        
        private void OnQueryUploadDeadLineOperationCompleted(object arg) {
            if ((this.QueryUploadDeadLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUploadDeadLineCompleted(this, new QueryUploadDeadLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/UploadInsertFuelDataList", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OperateResult UploadInsertFuelDataList(string userId, string password, VehicleBasicInfo[] vehicleInfoList, string cKey) {
            object[] results = this.Invoke("UploadInsertFuelDataList", new object[] {
                        userId,
                        password,
                        vehicleInfoList,
                        cKey});
            return ((OperateResult)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInsertFuelDataListAsync(string userId, string password, VehicleBasicInfo[] vehicleInfoList, string cKey) {
            this.UploadInsertFuelDataListAsync(userId, password, vehicleInfoList, cKey, null);
        }
        
        /// <remarks/>
        public void UploadInsertFuelDataListAsync(string userId, string password, VehicleBasicInfo[] vehicleInfoList, string cKey, object userState) {
            if ((this.UploadInsertFuelDataListOperationCompleted == null)) {
                this.UploadInsertFuelDataListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInsertFuelDataListOperationCompleted);
            }
            this.InvokeAsync("UploadInsertFuelDataList", new object[] {
                        userId,
                        password,
                        vehicleInfoList,
                        cKey}, this.UploadInsertFuelDataListOperationCompleted, userState);
        }
        
        private void OnUploadInsertFuelDataListOperationCompleted(object arg) {
            if ((this.UploadInsertFuelDataListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInsertFuelDataListCompleted(this, new UploadInsertFuelDataListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/UploadOverTime", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OperateResult UploadOverTime(string userId, string password, VehicleBasicInfo[] vehicleInfoList, string cKey) {
            object[] results = this.Invoke("UploadOverTime", new object[] {
                        userId,
                        password,
                        vehicleInfoList,
                        cKey});
            return ((OperateResult)(results[0]));
        }
        
        /// <remarks/>
        public void UploadOverTimeAsync(string userId, string password, VehicleBasicInfo[] vehicleInfoList, string cKey) {
            this.UploadOverTimeAsync(userId, password, vehicleInfoList, cKey, null);
        }
        
        /// <remarks/>
        public void UploadOverTimeAsync(string userId, string password, VehicleBasicInfo[] vehicleInfoList, string cKey, object userState) {
            if ((this.UploadOverTimeOperationCompleted == null)) {
                this.UploadOverTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadOverTimeOperationCompleted);
            }
            this.InvokeAsync("UploadOverTime", new object[] {
                        userId,
                        password,
                        vehicleInfoList,
                        cKey}, this.UploadOverTimeOperationCompleted, userState);
        }
        
        private void OnUploadOverTimeOperationCompleted(object arg) {
            if ((this.UploadOverTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadOverTimeCompleted(this, new UploadOverTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/ApplyUpdate", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OperateResult ApplyUpdate(string userId, string password, VehicleBasicInfo[] vehicleInfoList, string cKey) {
            object[] results = this.Invoke("ApplyUpdate", new object[] {
                        userId,
                        password,
                        vehicleInfoList,
                        cKey});
            return ((OperateResult)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyUpdateAsync(string userId, string password, VehicleBasicInfo[] vehicleInfoList, string cKey) {
            this.ApplyUpdateAsync(userId, password, vehicleInfoList, cKey, null);
        }
        
        /// <remarks/>
        public void ApplyUpdateAsync(string userId, string password, VehicleBasicInfo[] vehicleInfoList, string cKey, object userState) {
            if ((this.ApplyUpdateOperationCompleted == null)) {
                this.ApplyUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyUpdateOperationCompleted);
            }
            this.InvokeAsync("ApplyUpdate", new object[] {
                        userId,
                        password,
                        vehicleInfoList,
                        cKey}, this.ApplyUpdateOperationCompleted, userState);
        }
        
        private void OnApplyUpdateOperationCompleted(object arg) {
            if ((this.ApplyUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyUpdateCompleted(this, new ApplyUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/ApplyDelelte", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OperateResult ApplyDelelte(string userId, string password, string[] vinList, string delReason, string cKey) {
            object[] results = this.Invoke("ApplyDelelte", new object[] {
                        userId,
                        password,
                        vinList,
                        delReason,
                        cKey});
            return ((OperateResult)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyDelelteAsync(string userId, string password, string[] vinList, string delReason, string cKey) {
            this.ApplyDelelteAsync(userId, password, vinList, delReason, cKey, null);
        }
        
        /// <remarks/>
        public void ApplyDelelteAsync(string userId, string password, string[] vinList, string delReason, string cKey, object userState) {
            if ((this.ApplyDelelteOperationCompleted == null)) {
                this.ApplyDelelteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyDelelteOperationCompleted);
            }
            this.InvokeAsync("ApplyDelelte", new object[] {
                        userId,
                        password,
                        vinList,
                        delReason,
                        cKey}, this.ApplyDelelteOperationCompleted, userState);
        }
        
        private void OnApplyDelelteOperationCompleted(object arg) {
            if ((this.ApplyDelelteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyDelelteCompleted(this, new ApplyDelelteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryUploadedFuelData", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VehicleBasicInfo[] QueryUploadedFuelData(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            object[] results = this.Invoke("QueryUploadedFuelData", new object[] {
                        userId,
                        password,
                        pageNum,
                        pagesize,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType});
            return ((VehicleBasicInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryUploadedFuelDataAsync(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            this.QueryUploadedFuelDataAsync(userId, password, pageNum, pagesize, vin, clxh, clzl, rllx, startTime, endTime, timeType, null);
        }
        
        /// <remarks/>
        public void QueryUploadedFuelDataAsync(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType, object userState) {
            if ((this.QueryUploadedFuelDataOperationCompleted == null)) {
                this.QueryUploadedFuelDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUploadedFuelDataOperationCompleted);
            }
            this.InvokeAsync("QueryUploadedFuelData", new object[] {
                        userId,
                        password,
                        pageNum,
                        pagesize,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType}, this.QueryUploadedFuelDataOperationCompleted, userState);
        }
        
        private void OnQueryUploadedFuelDataOperationCompleted(object arg) {
            if ((this.QueryUploadedFuelDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUploadedFuelDataCompleted(this, new QueryUploadedFuelDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryUploadedFuelDataCount", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryUploadedFuelDataCount(string userName, string password, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            object[] results = this.Invoke("QueryUploadedFuelDataCount", new object[] {
                        userName,
                        password,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUploadedFuelDataCountAsync(string userName, string password, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            this.QueryUploadedFuelDataCountAsync(userName, password, vin, clxh, clzl, rllx, startTime, endTime, timeType, null);
        }
        
        /// <remarks/>
        public void QueryUploadedFuelDataCountAsync(string userName, string password, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType, object userState) {
            if ((this.QueryUploadedFuelDataCountOperationCompleted == null)) {
                this.QueryUploadedFuelDataCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUploadedFuelDataCountOperationCompleted);
            }
            this.InvokeAsync("QueryUploadedFuelDataCount", new object[] {
                        userName,
                        password,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType}, this.QueryUploadedFuelDataCountOperationCompleted, userState);
        }
        
        private void OnQueryUploadedFuelDataCountOperationCompleted(object arg) {
            if ((this.QueryUploadedFuelDataCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUploadedFuelDataCountCompleted(this, new QueryUploadedFuelDataCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryCustomFuelData", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryCustomFuelData(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            object[] results = this.Invoke("QueryCustomFuelData", new object[] {
                        userId,
                        password,
                        pageNum,
                        pagesize,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCustomFuelDataAsync(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            this.QueryCustomFuelDataAsync(userId, password, pageNum, pagesize, vin, clxh, clzl, rllx, startTime, endTime, timeType, null);
        }
        
        /// <remarks/>
        public void QueryCustomFuelDataAsync(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType, object userState) {
            if ((this.QueryCustomFuelDataOperationCompleted == null)) {
                this.QueryCustomFuelDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCustomFuelDataOperationCompleted);
            }
            this.InvokeAsync("QueryCustomFuelData", new object[] {
                        userId,
                        password,
                        pageNum,
                        pagesize,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType}, this.QueryCustomFuelDataOperationCompleted, userState);
        }
        
        private void OnQueryCustomFuelDataOperationCompleted(object arg) {
            if ((this.QueryCustomFuelDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCustomFuelDataCompleted(this, new QueryCustomFuelDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryVehicleInfoByVin", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VehicleBasicInfo[] QueryVehicleInfoByVin(string userId, string password, string vin) {
            object[] results = this.Invoke("QueryVehicleInfoByVin", new object[] {
                        userId,
                        password,
                        vin});
            return ((VehicleBasicInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryVehicleInfoByVinAsync(string userId, string password, string vin) {
            this.QueryVehicleInfoByVinAsync(userId, password, vin, null);
        }
        
        /// <remarks/>
        public void QueryVehicleInfoByVinAsync(string userId, string password, string vin, object userState) {
            if ((this.QueryVehicleInfoByVinOperationCompleted == null)) {
                this.QueryVehicleInfoByVinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryVehicleInfoByVinOperationCompleted);
            }
            this.InvokeAsync("QueryVehicleInfoByVin", new object[] {
                        userId,
                        password,
                        vin}, this.QueryVehicleInfoByVinOperationCompleted, userState);
        }
        
        private void OnQueryVehicleInfoByVinOperationCompleted(object arg) {
            if ((this.QueryVehicleInfoByVinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryVehicleInfoByVinCompleted(this, new QueryVehicleInfoByVinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryVehicleInfoByVinVid", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VehicleBasicInfo[] QueryVehicleInfoByVinVid(string userId, string password, string vin, string vId) {
            object[] results = this.Invoke("QueryVehicleInfoByVinVid", new object[] {
                        userId,
                        password,
                        vin,
                        vId});
            return ((VehicleBasicInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryVehicleInfoByVinVidAsync(string userId, string password, string vin, string vId) {
            this.QueryVehicleInfoByVinVidAsync(userId, password, vin, vId, null);
        }
        
        /// <remarks/>
        public void QueryVehicleInfoByVinVidAsync(string userId, string password, string vin, string vId, object userState) {
            if ((this.QueryVehicleInfoByVinVidOperationCompleted == null)) {
                this.QueryVehicleInfoByVinVidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryVehicleInfoByVinVidOperationCompleted);
            }
            this.InvokeAsync("QueryVehicleInfoByVinVid", new object[] {
                        userId,
                        password,
                        vin,
                        vId}, this.QueryVehicleInfoByVinVidOperationCompleted, userState);
        }
        
        private void OnQueryVehicleInfoByVinVidOperationCompleted(object arg) {
            if ((this.QueryVehicleInfoByVinVidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryVehicleInfoByVinVidCompleted(this, new QueryVehicleInfoByVinVidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryApplyUpLoadOT", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VehicleBasicInfo[] QueryApplyUpLoadOT(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            object[] results = this.Invoke("QueryApplyUpLoadOT", new object[] {
                        userId,
                        password,
                        pageNum,
                        pagesize,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType});
            return ((VehicleBasicInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryApplyUpLoadOTAsync(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            this.QueryApplyUpLoadOTAsync(userId, password, pageNum, pagesize, vin, clxh, clzl, rllx, startTime, endTime, timeType, null);
        }
        
        /// <remarks/>
        public void QueryApplyUpLoadOTAsync(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType, object userState) {
            if ((this.QueryApplyUpLoadOTOperationCompleted == null)) {
                this.QueryApplyUpLoadOTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryApplyUpLoadOTOperationCompleted);
            }
            this.InvokeAsync("QueryApplyUpLoadOT", new object[] {
                        userId,
                        password,
                        pageNum,
                        pagesize,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType}, this.QueryApplyUpLoadOTOperationCompleted, userState);
        }
        
        private void OnQueryApplyUpLoadOTOperationCompleted(object arg) {
            if ((this.QueryApplyUpLoadOTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryApplyUpLoadOTCompleted(this, new QueryApplyUpLoadOTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryApplyDelInfo", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VehicleBasicInfo[] QueryApplyDelInfo(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            object[] results = this.Invoke("QueryApplyDelInfo", new object[] {
                        userId,
                        password,
                        pageNum,
                        pagesize,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType});
            return ((VehicleBasicInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryApplyDelInfoAsync(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            this.QueryApplyDelInfoAsync(userId, password, pageNum, pagesize, vin, clxh, clzl, rllx, startTime, endTime, timeType, null);
        }
        
        /// <remarks/>
        public void QueryApplyDelInfoAsync(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType, object userState) {
            if ((this.QueryApplyDelInfoOperationCompleted == null)) {
                this.QueryApplyDelInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryApplyDelInfoOperationCompleted);
            }
            this.InvokeAsync("QueryApplyDelInfo", new object[] {
                        userId,
                        password,
                        pageNum,
                        pagesize,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType}, this.QueryApplyDelInfoOperationCompleted, userState);
        }
        
        private void OnQueryApplyDelInfoOperationCompleted(object arg) {
            if ((this.QueryApplyDelInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryApplyDelInfoCompleted(this, new QueryApplyDelInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryApplyUpdateInfo", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VehicleBasicInfo[] QueryApplyUpdateInfo(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            object[] results = this.Invoke("QueryApplyUpdateInfo", new object[] {
                        userId,
                        password,
                        pageNum,
                        pagesize,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType});
            return ((VehicleBasicInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryApplyUpdateInfoAsync(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            this.QueryApplyUpdateInfoAsync(userId, password, pageNum, pagesize, vin, clxh, clzl, rllx, startTime, endTime, timeType, null);
        }
        
        /// <remarks/>
        public void QueryApplyUpdateInfoAsync(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType, object userState) {
            if ((this.QueryApplyUpdateInfoOperationCompleted == null)) {
                this.QueryApplyUpdateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryApplyUpdateInfoOperationCompleted);
            }
            this.InvokeAsync("QueryApplyUpdateInfo", new object[] {
                        userId,
                        password,
                        pageNum,
                        pagesize,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType}, this.QueryApplyUpdateInfoOperationCompleted, userState);
        }
        
        private void OnQueryApplyUpdateInfoOperationCompleted(object arg) {
            if ((this.QueryApplyUpdateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryApplyUpdateInfoCompleted(this, new QueryApplyUpdateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryHisFuelData", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VehicleBasicInfo[] QueryHisFuelData(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            object[] results = this.Invoke("QueryHisFuelData", new object[] {
                        userId,
                        password,
                        pageNum,
                        pagesize,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType});
            return ((VehicleBasicInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryHisFuelDataAsync(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            this.QueryHisFuelDataAsync(userId, password, pageNum, pagesize, vin, clxh, clzl, rllx, startTime, endTime, timeType, null);
        }
        
        /// <remarks/>
        public void QueryHisFuelDataAsync(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType, object userState) {
            if ((this.QueryHisFuelDataOperationCompleted == null)) {
                this.QueryHisFuelDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryHisFuelDataOperationCompleted);
            }
            this.InvokeAsync("QueryHisFuelData", new object[] {
                        userId,
                        password,
                        pageNum,
                        pagesize,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType}, this.QueryHisFuelDataOperationCompleted, userState);
        }
        
        private void OnQueryHisFuelDataOperationCompleted(object arg) {
            if ((this.QueryHisFuelDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryHisFuelDataCompleted(this, new QueryHisFuelDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryRllxParamData", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RllxParam[] QueryRllxParamData(string userId, string password) {
            object[] results = this.Invoke("QueryRllxParamData", new object[] {
                        userId,
                        password});
            return ((RllxParam[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryRllxParamDataAsync(string userId, string password) {
            this.QueryRllxParamDataAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void QueryRllxParamDataAsync(string userId, string password, object userState) {
            if ((this.QueryRllxParamDataOperationCompleted == null)) {
                this.QueryRllxParamDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRllxParamDataOperationCompleted);
            }
            this.InvokeAsync("QueryRllxParamData", new object[] {
                        userId,
                        password}, this.QueryRllxParamDataOperationCompleted, userState);
        }
        
        private void OnQueryRllxParamDataOperationCompleted(object arg) {
            if ((this.QueryRllxParamDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRllxParamDataCompleted(this, new QueryRllxParamDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryHolidayData", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryHolidayData(string userId, string password) {
            object[] results = this.Invoke("QueryHolidayData", new object[] {
                        userId,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryHolidayDataAsync(string userId, string password) {
            this.QueryHolidayDataAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void QueryHolidayDataAsync(string userId, string password, object userState) {
            if ((this.QueryHolidayDataOperationCompleted == null)) {
                this.QueryHolidayDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryHolidayDataOperationCompleted);
            }
            this.InvokeAsync("QueryHolidayData", new object[] {
                        userId,
                        password}, this.QueryHolidayDataOperationCompleted, userState);
        }
        
        private void OnQueryHolidayDataOperationCompleted(object arg) {
            if ((this.QueryHolidayDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryHolidayDataCompleted(this, new QueryHolidayDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryVidByVins", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryVidByVins(string userId, string password, string vins) {
            object[] results = this.Invoke("QueryVidByVins", new object[] {
                        userId,
                        password,
                        vins});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryVidByVinsAsync(string userId, string password, string vins) {
            this.QueryVidByVinsAsync(userId, password, vins, null);
        }
        
        /// <remarks/>
        public void QueryVidByVinsAsync(string userId, string password, string vins, object userState) {
            if ((this.QueryVidByVinsOperationCompleted == null)) {
                this.QueryVidByVinsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryVidByVinsOperationCompleted);
            }
            this.InvokeAsync("QueryVidByVins", new object[] {
                        userId,
                        password,
                        vins}, this.QueryVidByVinsOperationCompleted, userState);
        }
        
        private void OnQueryVidByVinsOperationCompleted(object arg) {
            if ((this.QueryVidByVinsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryVidByVinsCompleted(this, new QueryVidByVinsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryNotice", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] QueryNotice(string userId, string password) {
            object[] results = this.Invoke("QueryNotice", new object[] {
                        userId,
                        password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryNoticeAsync(string userId, string password) {
            this.QueryNoticeAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void QueryNoticeAsync(string userId, string password, object userState) {
            if ((this.QueryNoticeOperationCompleted == null)) {
                this.QueryNoticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryNoticeOperationCompleted);
            }
            this.InvokeAsync("QueryNotice", new object[] {
                        userId,
                        password}, this.QueryNoticeOperationCompleted, userState);
        }
        
        private void OnQueryNoticeOperationCompleted(object arg) {
            if ((this.QueryNoticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryNoticeCompleted(this, new QueryNoticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FuelDataSysWebService/QueryUploadedFuelData_New", RequestNamespace="FuelDataSysWebService", ResponseNamespace="FuelDataSysWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VehicleBasicInfo[] QueryUploadedFuelData_New(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            object[] results = this.Invoke("QueryUploadedFuelData_New", new object[] {
                        userId,
                        password,
                        pageNum,
                        pagesize,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType});
            return ((VehicleBasicInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryUploadedFuelData_NewAsync(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType) {
            this.QueryUploadedFuelData_NewAsync(userId, password, pageNum, pagesize, vin, clxh, clzl, rllx, startTime, endTime, timeType, null);
        }
        
        /// <remarks/>
        public void QueryUploadedFuelData_NewAsync(string userId, string password, int pageNum, int pagesize, string vin, string clxh, string clzl, string rllx, string startTime, string endTime, string timeType, object userState) {
            if ((this.QueryUploadedFuelData_NewOperationCompleted == null)) {
                this.QueryUploadedFuelData_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUploadedFuelData_NewOperationCompleted);
            }
            this.InvokeAsync("QueryUploadedFuelData_New", new object[] {
                        userId,
                        password,
                        pageNum,
                        pagesize,
                        vin,
                        clxh,
                        clzl,
                        rllx,
                        startTime,
                        endTime,
                        timeType}, this.QueryUploadedFuelData_NewOperationCompleted, userState);
        }
        
        private void OnQueryUploadedFuelData_NewOperationCompleted(object arg) {
            if ((this.QueryUploadedFuelData_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUploadedFuelData_NewCompleted(this, new QueryUploadedFuelData_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="FuelDataSysWebService")]
    public partial class VehicleBasicInfo {
        
        private RllxParamEntity[] entityListField;
        
        private string v_IdField;
        
        private string vinField;
        
        private string app_VinField;
        
        private string hgNoField;
        
        private string cocNoField;
        
        private string cCCHolderField;
        
        private string hgspbmField;
        
        private string user_IdField;
        
        private string qcscqyField;
        
        private string jkqczjxsField;
        
        private string clxhField;
        
        private string clzlField;
        
        private string rllxField;
        
        private string zczbzlField;
        
        private string zgcsField;
        
        private string ltggField;
        
        private string zjField;
        
        private System.DateTime clzzrqField;
        
        private string tymcField;
        
        private string yycField;
        
        private string zwpsField;
        
        private string zdsjzzlField;
        
        private string edzkField;
        
        private string ljField;
        
        private string qdxsField;
        
        private System.DateTime createTimeField;
        
        private System.DateTime updateTimeField;
        
        private string statusField;
        
        private string jyjgmcField;
        
        private string jybgbhField;
        
        private string qtxxField;
        
        private string apply_TypeField;
        
        private bool checkField;
        
        private string reasonField;
        
        /// <remarks/>
        public RllxParamEntity[] EntityList {
            get {
                return this.entityListField;
            }
            set {
                this.entityListField = value;
            }
        }
        
        /// <remarks/>
        public string V_Id {
            get {
                return this.v_IdField;
            }
            set {
                this.v_IdField = value;
            }
        }
        
        /// <remarks/>
        public string Vin {
            get {
                return this.vinField;
            }
            set {
                this.vinField = value;
            }
        }
        
        /// <remarks/>
        public string App_Vin {
            get {
                return this.app_VinField;
            }
            set {
                this.app_VinField = value;
            }
        }
        
        /// <remarks/>
        public string HgNo {
            get {
                return this.hgNoField;
            }
            set {
                this.hgNoField = value;
            }
        }
        
        /// <remarks/>
        public string CocNo {
            get {
                return this.cocNoField;
            }
            set {
                this.cocNoField = value;
            }
        }
        
        /// <remarks/>
        public string CCCHolder {
            get {
                return this.cCCHolderField;
            }
            set {
                this.cCCHolderField = value;
            }
        }
        
        /// <remarks/>
        public string Hgspbm {
            get {
                return this.hgspbmField;
            }
            set {
                this.hgspbmField = value;
            }
        }
        
        /// <remarks/>
        public string User_Id {
            get {
                return this.user_IdField;
            }
            set {
                this.user_IdField = value;
            }
        }
        
        /// <remarks/>
        public string Qcscqy {
            get {
                return this.qcscqyField;
            }
            set {
                this.qcscqyField = value;
            }
        }
        
        /// <remarks/>
        public string Jkqczjxs {
            get {
                return this.jkqczjxsField;
            }
            set {
                this.jkqczjxsField = value;
            }
        }
        
        /// <remarks/>
        public string Clxh {
            get {
                return this.clxhField;
            }
            set {
                this.clxhField = value;
            }
        }
        
        /// <remarks/>
        public string Clzl {
            get {
                return this.clzlField;
            }
            set {
                this.clzlField = value;
            }
        }
        
        /// <remarks/>
        public string Rllx {
            get {
                return this.rllxField;
            }
            set {
                this.rllxField = value;
            }
        }
        
        /// <remarks/>
        public string Zczbzl {
            get {
                return this.zczbzlField;
            }
            set {
                this.zczbzlField = value;
            }
        }
        
        /// <remarks/>
        public string Zgcs {
            get {
                return this.zgcsField;
            }
            set {
                this.zgcsField = value;
            }
        }
        
        /// <remarks/>
        public string Ltgg {
            get {
                return this.ltggField;
            }
            set {
                this.ltggField = value;
            }
        }
        
        /// <remarks/>
        public string Zj {
            get {
                return this.zjField;
            }
            set {
                this.zjField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Clzzrq {
            get {
                return this.clzzrqField;
            }
            set {
                this.clzzrqField = value;
            }
        }
        
        /// <remarks/>
        public string Tymc {
            get {
                return this.tymcField;
            }
            set {
                this.tymcField = value;
            }
        }
        
        /// <remarks/>
        public string Yyc {
            get {
                return this.yycField;
            }
            set {
                this.yycField = value;
            }
        }
        
        /// <remarks/>
        public string Zwps {
            get {
                return this.zwpsField;
            }
            set {
                this.zwpsField = value;
            }
        }
        
        /// <remarks/>
        public string Zdsjzzl {
            get {
                return this.zdsjzzlField;
            }
            set {
                this.zdsjzzlField = value;
            }
        }
        
        /// <remarks/>
        public string Edzk {
            get {
                return this.edzkField;
            }
            set {
                this.edzkField = value;
            }
        }
        
        /// <remarks/>
        public string Lj {
            get {
                return this.ljField;
            }
            set {
                this.ljField = value;
            }
        }
        
        /// <remarks/>
        public string Qdxs {
            get {
                return this.qdxsField;
            }
            set {
                this.qdxsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UpdateTime {
            get {
                return this.updateTimeField;
            }
            set {
                this.updateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Jyjgmc {
            get {
                return this.jyjgmcField;
            }
            set {
                this.jyjgmcField = value;
            }
        }
        
        /// <remarks/>
        public string Jybgbh {
            get {
                return this.jybgbhField;
            }
            set {
                this.jybgbhField = value;
            }
        }
        
        /// <remarks/>
        public string Qtxx {
            get {
                return this.qtxxField;
            }
            set {
                this.qtxxField = value;
            }
        }
        
        /// <remarks/>
        public string Apply_Type {
            get {
                return this.apply_TypeField;
            }
            set {
                this.apply_TypeField = value;
            }
        }
        
        /// <remarks/>
        public bool Check {
            get {
                return this.checkField;
            }
            set {
                this.checkField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="FuelDataSysWebService")]
    public partial class RllxParamEntity {
        
        private long param_Entity_IdField;
        
        private string param_CodeField;
        
        private string v_IdField;
        
        private string vinField;
        
        private string param_ValueField;
        
        /// <remarks/>
        public long Param_Entity_Id {
            get {
                return this.param_Entity_IdField;
            }
            set {
                this.param_Entity_IdField = value;
            }
        }
        
        /// <remarks/>
        public string Param_Code {
            get {
                return this.param_CodeField;
            }
            set {
                this.param_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string V_Id {
            get {
                return this.v_IdField;
            }
            set {
                this.v_IdField = value;
            }
        }
        
        /// <remarks/>
        public string Vin {
            get {
                return this.vinField;
            }
            set {
                this.vinField = value;
            }
        }
        
        /// <remarks/>
        public string Param_Value {
            get {
                return this.param_ValueField;
            }
            set {
                this.param_ValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="FuelDataSysWebService")]
    public partial class RllxParam {
        
        private string param_CodeField;
        
        private string param_NameField;
        
        private string fuel_TypeField;
        
        private string param_RemarkField;
        
        private string control_TypeField;
        
        private string control_ValueField;
        
        private string statusField;
        
        private string order_RuleField;
        
        /// <remarks/>
        public string Param_Code {
            get {
                return this.param_CodeField;
            }
            set {
                this.param_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Param_Name {
            get {
                return this.param_NameField;
            }
            set {
                this.param_NameField = value;
            }
        }
        
        /// <remarks/>
        public string Fuel_Type {
            get {
                return this.fuel_TypeField;
            }
            set {
                this.fuel_TypeField = value;
            }
        }
        
        /// <remarks/>
        public string Param_Remark {
            get {
                return this.param_RemarkField;
            }
            set {
                this.param_RemarkField = value;
            }
        }
        
        /// <remarks/>
        public string Control_Type {
            get {
                return this.control_TypeField;
            }
            set {
                this.control_TypeField = value;
            }
        }
        
        /// <remarks/>
        public string Control_Value {
            get {
                return this.control_ValueField;
            }
            set {
                this.control_ValueField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Order_Rule {
            get {
                return this.order_RuleField;
            }
            set {
                this.order_RuleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="FuelDataSysWebService")]
    public partial class NameValuePair {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="FuelDataSysWebService")]
    public partial class OperateResult {
        
        private int resultCodeField;
        
        private NameValuePair[] resultDetailField;
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public NameValuePair[] ResultDetail {
            get {
                return this.resultDetailField;
            }
            set {
                this.resultDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckUserCompletedEventHandler(object sender, CheckUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryQymcCompletedEventHandler(object sender, QueryQymcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryQymcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryQymcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryParamVersionCompletedEventHandler(object sender, QueryParamVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParamVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryParamVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryUploadTimeConstrainCompletedEventHandler(object sender, QueryUploadTimeConstrainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUploadTimeConstrainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUploadTimeConstrainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryUploadDeadLineCompletedEventHandler(object sender, QueryUploadDeadLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUploadDeadLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUploadDeadLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadInsertFuelDataListCompletedEventHandler(object sender, UploadInsertFuelDataListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInsertFuelDataListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInsertFuelDataListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadOverTimeCompletedEventHandler(object sender, UploadOverTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadOverTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadOverTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ApplyUpdateCompletedEventHandler(object sender, ApplyUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ApplyDelelteCompletedEventHandler(object sender, ApplyDelelteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyDelelteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyDelelteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OperateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OperateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryUploadedFuelDataCompletedEventHandler(object sender, QueryUploadedFuelDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUploadedFuelDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUploadedFuelDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleBasicInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleBasicInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryUploadedFuelDataCountCompletedEventHandler(object sender, QueryUploadedFuelDataCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUploadedFuelDataCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUploadedFuelDataCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryCustomFuelDataCompletedEventHandler(object sender, QueryCustomFuelDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCustomFuelDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCustomFuelDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryVehicleInfoByVinCompletedEventHandler(object sender, QueryVehicleInfoByVinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryVehicleInfoByVinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryVehicleInfoByVinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleBasicInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleBasicInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryVehicleInfoByVinVidCompletedEventHandler(object sender, QueryVehicleInfoByVinVidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryVehicleInfoByVinVidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryVehicleInfoByVinVidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleBasicInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleBasicInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryApplyUpLoadOTCompletedEventHandler(object sender, QueryApplyUpLoadOTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryApplyUpLoadOTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryApplyUpLoadOTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleBasicInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleBasicInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryApplyDelInfoCompletedEventHandler(object sender, QueryApplyDelInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryApplyDelInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryApplyDelInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleBasicInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleBasicInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryApplyUpdateInfoCompletedEventHandler(object sender, QueryApplyUpdateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryApplyUpdateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryApplyUpdateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleBasicInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleBasicInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryHisFuelDataCompletedEventHandler(object sender, QueryHisFuelDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryHisFuelDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryHisFuelDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleBasicInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleBasicInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryRllxParamDataCompletedEventHandler(object sender, QueryRllxParamDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRllxParamDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryRllxParamDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RllxParam[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RllxParam[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryHolidayDataCompletedEventHandler(object sender, QueryHolidayDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryHolidayDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryHolidayDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryVidByVinsCompletedEventHandler(object sender, QueryVidByVinsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryVidByVinsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryVidByVinsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryNoticeCompletedEventHandler(object sender, QueryNoticeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryNoticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryNoticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryUploadedFuelData_NewCompletedEventHandler(object sender, QueryUploadedFuelData_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUploadedFuelData_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUploadedFuelData_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleBasicInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleBasicInfo[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591