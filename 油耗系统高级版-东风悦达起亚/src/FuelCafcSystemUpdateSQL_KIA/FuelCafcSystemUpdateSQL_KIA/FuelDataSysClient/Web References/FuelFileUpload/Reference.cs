//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace FuelDataSysClient.FuelFileUpload {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FileUploadServiceSoap", Namespace="http://soap.catarc.info/")]
    public partial class FileUploadService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback Upload_FileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback Download_FileOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPortPERMISSIONOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySystemMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryEnterpriseMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadSignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySignatureByQymcOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpLoadChangeDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryChangeDocByUidOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FileUploadService() {
            this.Url = global::FuelDataSysClient.Properties.Settings.Default.FuelDataSysClient_FuelFileUpload_FileUploadService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event UploadFileCompletedEventHandler UploadFileCompleted;
        
        /// <remarks/>
        public event Upload_FileCompletedEventHandler Upload_FileCompleted;
        
        /// <remarks/>
        public event DownloadFileCompletedEventHandler DownloadFileCompleted;
        
        /// <remarks/>
        public event Download_FileCompletedEventHandler Download_FileCompleted;
        
        /// <remarks/>
        public event QueryPortPERMISSIONCompletedEventHandler QueryPortPERMISSIONCompleted;
        
        /// <remarks/>
        public event QuerySystemMsgCompletedEventHandler QuerySystemMsgCompleted;
        
        /// <remarks/>
        public event QueryEnterpriseMsgCompletedEventHandler QueryEnterpriseMsgCompleted;
        
        /// <remarks/>
        public event UploadSignatureCompletedEventHandler UploadSignatureCompleted;
        
        /// <remarks/>
        public event QuerySignatureByQymcCompletedEventHandler QuerySignatureByQymcCompleted;
        
        /// <remarks/>
        public event UpdateSignatureCompletedEventHandler UpdateSignatureCompleted;
        
        /// <remarks/>
        public event UpLoadChangeDocCompletedEventHandler UpLoadChangeDocCompleted;
        
        /// <remarks/>
        public event QueryChangeDocByUidCompletedEventHandler QueryChangeDocByUidCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.catarc.info/HelloWorld", RequestNamespace="http://soap.catarc.info/", ResponseNamespace="http://soap.catarc.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.catarc.info/UploadFile", RequestNamespace="http://soap.catarc.info/", ResponseNamespace="http://soap.catarc.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadFile(string userId, string password, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fs, string path, string fileName) {
            object[] results = this.Invoke("UploadFile", new object[] {
                        userId,
                        password,
                        fs,
                        path,
                        fileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileAsync(string userId, string password, byte[] fs, string path, string fileName) {
            this.UploadFileAsync(userId, password, fs, path, fileName, null);
        }
        
        /// <remarks/>
        public void UploadFileAsync(string userId, string password, byte[] fs, string path, string fileName, object userState) {
            if ((this.UploadFileOperationCompleted == null)) {
                this.UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileOperationCompleted);
            }
            this.InvokeAsync("UploadFile", new object[] {
                        userId,
                        password,
                        fs,
                        path,
                        fileName}, this.UploadFileOperationCompleted, userState);
        }
        
        private void OnUploadFileOperationCompleted(object arg) {
            if ((this.UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.catarc.info/Upload_File", RequestNamespace="http://soap.catarc.info/", ResponseNamespace="http://soap.catarc.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Upload_File([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fs, string path, string fileName) {
            object[] results = this.Invoke("Upload_File", new object[] {
                        fs,
                        path,
                        fileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Upload_FileAsync(byte[] fs, string path, string fileName) {
            this.Upload_FileAsync(fs, path, fileName, null);
        }
        
        /// <remarks/>
        public void Upload_FileAsync(byte[] fs, string path, string fileName, object userState) {
            if ((this.Upload_FileOperationCompleted == null)) {
                this.Upload_FileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpload_FileOperationCompleted);
            }
            this.InvokeAsync("Upload_File", new object[] {
                        fs,
                        path,
                        fileName}, this.Upload_FileOperationCompleted, userState);
        }
        
        private void OnUpload_FileOperationCompleted(object arg) {
            if ((this.Upload_FileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Upload_FileCompleted(this, new Upload_FileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.catarc.info/DownloadFile", RequestNamespace="http://soap.catarc.info/", ResponseNamespace="http://soap.catarc.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadFile(string userId, string password, string strFilePath, string path) {
            object[] results = this.Invoke("DownloadFile", new object[] {
                        userId,
                        password,
                        strFilePath,
                        path});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadFileAsync(string userId, string password, string strFilePath, string path) {
            this.DownloadFileAsync(userId, password, strFilePath, path, null);
        }
        
        /// <remarks/>
        public void DownloadFileAsync(string userId, string password, string strFilePath, string path, object userState) {
            if ((this.DownloadFileOperationCompleted == null)) {
                this.DownloadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadFileOperationCompleted);
            }
            this.InvokeAsync("DownloadFile", new object[] {
                        userId,
                        password,
                        strFilePath,
                        path}, this.DownloadFileOperationCompleted, userState);
        }
        
        private void OnDownloadFileOperationCompleted(object arg) {
            if ((this.DownloadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadFileCompleted(this, new DownloadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.catarc.info/Download_File", RequestNamespace="http://soap.catarc.info/", ResponseNamespace="http://soap.catarc.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Download_File(string strFilePath, string path) {
            object[] results = this.Invoke("Download_File", new object[] {
                        strFilePath,
                        path});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void Download_FileAsync(string strFilePath, string path) {
            this.Download_FileAsync(strFilePath, path, null);
        }
        
        /// <remarks/>
        public void Download_FileAsync(string strFilePath, string path, object userState) {
            if ((this.Download_FileOperationCompleted == null)) {
                this.Download_FileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownload_FileOperationCompleted);
            }
            this.InvokeAsync("Download_File", new object[] {
                        strFilePath,
                        path}, this.Download_FileOperationCompleted, userState);
        }
        
        private void OnDownload_FileOperationCompleted(object arg) {
            if ((this.Download_FileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Download_FileCompleted(this, new Download_FileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.catarc.info/QueryPortPERMISSION", RequestNamespace="http://soap.catarc.info/", ResponseNamespace="http://soap.catarc.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryPortPERMISSION(string userId, string password) {
            object[] results = this.Invoke("QueryPortPERMISSION", new object[] {
                        userId,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPortPERMISSIONAsync(string userId, string password) {
            this.QueryPortPERMISSIONAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void QueryPortPERMISSIONAsync(string userId, string password, object userState) {
            if ((this.QueryPortPERMISSIONOperationCompleted == null)) {
                this.QueryPortPERMISSIONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPortPERMISSIONOperationCompleted);
            }
            this.InvokeAsync("QueryPortPERMISSION", new object[] {
                        userId,
                        password}, this.QueryPortPERMISSIONOperationCompleted, userState);
        }
        
        private void OnQueryPortPERMISSIONOperationCompleted(object arg) {
            if ((this.QueryPortPERMISSIONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPortPERMISSIONCompleted(this, new QueryPortPERMISSIONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.catarc.info/QuerySystemMsg", RequestNamespace="http://soap.catarc.info/", ResponseNamespace="http://soap.catarc.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QuerySystemMsg(string userId, string password, string msgType) {
            object[] results = this.Invoke("QuerySystemMsg", new object[] {
                        userId,
                        password,
                        msgType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySystemMsgAsync(string userId, string password, string msgType) {
            this.QuerySystemMsgAsync(userId, password, msgType, null);
        }
        
        /// <remarks/>
        public void QuerySystemMsgAsync(string userId, string password, string msgType, object userState) {
            if ((this.QuerySystemMsgOperationCompleted == null)) {
                this.QuerySystemMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySystemMsgOperationCompleted);
            }
            this.InvokeAsync("QuerySystemMsg", new object[] {
                        userId,
                        password,
                        msgType}, this.QuerySystemMsgOperationCompleted, userState);
        }
        
        private void OnQuerySystemMsgOperationCompleted(object arg) {
            if ((this.QuerySystemMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySystemMsgCompleted(this, new QuerySystemMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.catarc.info/QueryEnterpriseMsg", RequestNamespace="http://soap.catarc.info/", ResponseNamespace="http://soap.catarc.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryEnterpriseMsg(string userId, string password, string msgType) {
            object[] results = this.Invoke("QueryEnterpriseMsg", new object[] {
                        userId,
                        password,
                        msgType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryEnterpriseMsgAsync(string userId, string password, string msgType) {
            this.QueryEnterpriseMsgAsync(userId, password, msgType, null);
        }
        
        /// <remarks/>
        public void QueryEnterpriseMsgAsync(string userId, string password, string msgType, object userState) {
            if ((this.QueryEnterpriseMsgOperationCompleted == null)) {
                this.QueryEnterpriseMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryEnterpriseMsgOperationCompleted);
            }
            this.InvokeAsync("QueryEnterpriseMsg", new object[] {
                        userId,
                        password,
                        msgType}, this.QueryEnterpriseMsgOperationCompleted, userState);
        }
        
        private void OnQueryEnterpriseMsgOperationCompleted(object arg) {
            if ((this.QueryEnterpriseMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryEnterpriseMsgCompleted(this, new QueryEnterpriseMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.catarc.info/UploadSignature", RequestNamespace="http://soap.catarc.info/", ResponseNamespace="http://soap.catarc.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadSignature([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fs, string userId, string password, string qymc, string fileNew, string fileOld, System.DateTime app_time, System.DateTime upd_time, int status) {
            object[] results = this.Invoke("UploadSignature", new object[] {
                        fs,
                        userId,
                        password,
                        qymc,
                        fileNew,
                        fileOld,
                        app_time,
                        upd_time,
                        status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadSignatureAsync(byte[] fs, string userId, string password, string qymc, string fileNew, string fileOld, System.DateTime app_time, System.DateTime upd_time, int status) {
            this.UploadSignatureAsync(fs, userId, password, qymc, fileNew, fileOld, app_time, upd_time, status, null);
        }
        
        /// <remarks/>
        public void UploadSignatureAsync(byte[] fs, string userId, string password, string qymc, string fileNew, string fileOld, System.DateTime app_time, System.DateTime upd_time, int status, object userState) {
            if ((this.UploadSignatureOperationCompleted == null)) {
                this.UploadSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadSignatureOperationCompleted);
            }
            this.InvokeAsync("UploadSignature", new object[] {
                        fs,
                        userId,
                        password,
                        qymc,
                        fileNew,
                        fileOld,
                        app_time,
                        upd_time,
                        status}, this.UploadSignatureOperationCompleted, userState);
        }
        
        private void OnUploadSignatureOperationCompleted(object arg) {
            if ((this.UploadSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadSignatureCompleted(this, new UploadSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.catarc.info/QuerySignatureByQymc", RequestNamespace="http://soap.catarc.info/", ResponseNamespace="http://soap.catarc.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QuerySignatureByQymc(string userId, string password, string qymc) {
            object[] results = this.Invoke("QuerySignatureByQymc", new object[] {
                        userId,
                        password,
                        qymc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySignatureByQymcAsync(string userId, string password, string qymc) {
            this.QuerySignatureByQymcAsync(userId, password, qymc, null);
        }
        
        /// <remarks/>
        public void QuerySignatureByQymcAsync(string userId, string password, string qymc, object userState) {
            if ((this.QuerySignatureByQymcOperationCompleted == null)) {
                this.QuerySignatureByQymcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySignatureByQymcOperationCompleted);
            }
            this.InvokeAsync("QuerySignatureByQymc", new object[] {
                        userId,
                        password,
                        qymc}, this.QuerySignatureByQymcOperationCompleted, userState);
        }
        
        private void OnQuerySignatureByQymcOperationCompleted(object arg) {
            if ((this.QuerySignatureByQymcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySignatureByQymcCompleted(this, new QuerySignatureByQymcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.catarc.info/UpdateSignature", RequestNamespace="http://soap.catarc.info/", ResponseNamespace="http://soap.catarc.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSignature([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fs, string userId, string password, string qymc, string fileNew, string fileOld, System.DateTime app_time, System.DateTime upd_time, int status) {
            object[] results = this.Invoke("UpdateSignature", new object[] {
                        fs,
                        userId,
                        password,
                        qymc,
                        fileNew,
                        fileOld,
                        app_time,
                        upd_time,
                        status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSignatureAsync(byte[] fs, string userId, string password, string qymc, string fileNew, string fileOld, System.DateTime app_time, System.DateTime upd_time, int status) {
            this.UpdateSignatureAsync(fs, userId, password, qymc, fileNew, fileOld, app_time, upd_time, status, null);
        }
        
        /// <remarks/>
        public void UpdateSignatureAsync(byte[] fs, string userId, string password, string qymc, string fileNew, string fileOld, System.DateTime app_time, System.DateTime upd_time, int status, object userState) {
            if ((this.UpdateSignatureOperationCompleted == null)) {
                this.UpdateSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSignatureOperationCompleted);
            }
            this.InvokeAsync("UpdateSignature", new object[] {
                        fs,
                        userId,
                        password,
                        qymc,
                        fileNew,
                        fileOld,
                        app_time,
                        upd_time,
                        status}, this.UpdateSignatureOperationCompleted, userState);
        }
        
        private void OnUpdateSignatureOperationCompleted(object arg) {
            if ((this.UpdateSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSignatureCompleted(this, new UpdateSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.catarc.info/UpLoadChangeDoc", RequestNamespace="http://soap.catarc.info/", ResponseNamespace="http://soap.catarc.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpLoadChangeDoc([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fs, string userId, string password, string qymc, string fileNew, string fileOld, System.DateTime app_time, System.DateTime upd_time, int status) {
            object[] results = this.Invoke("UpLoadChangeDoc", new object[] {
                        fs,
                        userId,
                        password,
                        qymc,
                        fileNew,
                        fileOld,
                        app_time,
                        upd_time,
                        status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpLoadChangeDocAsync(byte[] fs, string userId, string password, string qymc, string fileNew, string fileOld, System.DateTime app_time, System.DateTime upd_time, int status) {
            this.UpLoadChangeDocAsync(fs, userId, password, qymc, fileNew, fileOld, app_time, upd_time, status, null);
        }
        
        /// <remarks/>
        public void UpLoadChangeDocAsync(byte[] fs, string userId, string password, string qymc, string fileNew, string fileOld, System.DateTime app_time, System.DateTime upd_time, int status, object userState) {
            if ((this.UpLoadChangeDocOperationCompleted == null)) {
                this.UpLoadChangeDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpLoadChangeDocOperationCompleted);
            }
            this.InvokeAsync("UpLoadChangeDoc", new object[] {
                        fs,
                        userId,
                        password,
                        qymc,
                        fileNew,
                        fileOld,
                        app_time,
                        upd_time,
                        status}, this.UpLoadChangeDocOperationCompleted, userState);
        }
        
        private void OnUpLoadChangeDocOperationCompleted(object arg) {
            if ((this.UpLoadChangeDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpLoadChangeDocCompleted(this, new UpLoadChangeDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.catarc.info/QueryChangeDocByUid", RequestNamespace="http://soap.catarc.info/", ResponseNamespace="http://soap.catarc.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryChangeDocByUid(string userId, string password, string qymc) {
            object[] results = this.Invoke("QueryChangeDocByUid", new object[] {
                        userId,
                        password,
                        qymc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryChangeDocByUidAsync(string userId, string password, string qymc) {
            this.QueryChangeDocByUidAsync(userId, password, qymc, null);
        }
        
        /// <remarks/>
        public void QueryChangeDocByUidAsync(string userId, string password, string qymc, object userState) {
            if ((this.QueryChangeDocByUidOperationCompleted == null)) {
                this.QueryChangeDocByUidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryChangeDocByUidOperationCompleted);
            }
            this.InvokeAsync("QueryChangeDocByUid", new object[] {
                        userId,
                        password,
                        qymc}, this.QueryChangeDocByUidOperationCompleted, userState);
        }
        
        private void OnQueryChangeDocByUidOperationCompleted(object arg) {
            if ((this.QueryChangeDocByUidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryChangeDocByUidCompleted(this, new QueryChangeDocByUidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadFileCompletedEventHandler(object sender, UploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Upload_FileCompletedEventHandler(object sender, Upload_FileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Upload_FileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Upload_FileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DownloadFileCompletedEventHandler(object sender, DownloadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Download_FileCompletedEventHandler(object sender, Download_FileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Download_FileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Download_FileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryPortPERMISSIONCompletedEventHandler(object sender, QueryPortPERMISSIONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPortPERMISSIONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPortPERMISSIONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QuerySystemMsgCompletedEventHandler(object sender, QuerySystemMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySystemMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySystemMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryEnterpriseMsgCompletedEventHandler(object sender, QueryEnterpriseMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryEnterpriseMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryEnterpriseMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UploadSignatureCompletedEventHandler(object sender, UploadSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QuerySignatureByQymcCompletedEventHandler(object sender, QuerySignatureByQymcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySignatureByQymcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySignatureByQymcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateSignatureCompletedEventHandler(object sender, UpdateSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpLoadChangeDocCompletedEventHandler(object sender, UpLoadChangeDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpLoadChangeDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpLoadChangeDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryChangeDocByUidCompletedEventHandler(object sender, QueryChangeDocByUidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryChangeDocByUidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryChangeDocByUidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591